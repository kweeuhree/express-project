const express = require('express');
const router = express.Router();
const uuid = require('uuid'); //get autogenerated ids
const inventory = require('../data/inventoryData');


//get all inventory
router.get('/', (req, res) => {
    res.json(inventory);
});

//get a single item
router.get('/:id', (req, res, next) => {
    const inventoryItem = inventory.find((item) => item.id == req.params.id);
    if(inventoryItem) res.json(inventoryItem);
    else next();
})

//post item
router.post('/', (req, res) => {
    console.log(req.body);
    const newItem = {
        id: uuid.v4(),
        name: req.body.name,
        origin: req.body.origin
    }

    if(!newItem.name || !newItem.origin) {
        res.status(400).json({ msg: 'Make sure to enter name and origin' })
    }

    inventory.push(newItem);

    res.json(inventory);
})




//update a single item
router.put('/:id', (req, res) => {
    const found = inventory.some(item => item.id === parseInt(req.params.id));
    if (found) {
        const updatedItem = req.body;
        inventory.forEach(item => {
            if (item.id === parseInt(req.params.id)) {
                item.id = updatedItem.id ? updatedItem.id : item.id;
                item.name = updatedItem.name ? updatedItem.name : item.name;
                item.origin = updatedItem.origin ? updatedItem.origin : item.origin;

                res.json({ msg: `Updated item`, item });
            }
        });
    } else {
        res.status(400).json({ msg: `Item not found with id of ${req.params.id}` });
    }
});

//delete inventory item
router.delete('/:id', (req, res) => {
    const found = inventory.find(item => item.id === parseInt(req.params.id));

    if(found) {
        res.json({ msg: `Item deleted`, inventory: inventory.filter(item => item.id !== parseInt(req.params.id)) });
    } else {
        res.status(400).json({ msg: `Item not found with id of ${req.params.id}` })
    }
})

//-------------------------------------------------------export
module.exports = router;


